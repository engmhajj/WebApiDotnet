<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi</name>
    </assembly>
    <members>
        <member name="M:webapi.Authority.IAuthenticator.AuthenticateAsync(System.String,System.String)">
            <summary>
            Authenticate client credentials asynchronously.
            </summary>
        </member>
        <member name="M:webapi.Authority.IAuthenticator.CreateTokenAsync(System.String,System.DateTime)">
            <summary>
            Create a JWT access token asynchronously.
            </summary>
        </member>
        <member name="M:webapi.Authority.IAuthenticator.ValidateRefreshTokenAsync(System.String,System.String)">
            <summary>
            Validate the refresh token asynchronously.
            </summary>
        </member>
        <member name="M:webapi.Authority.IAuthenticator.RevokeRefreshTokenAsync(System.String,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Revoke a refresh token asynchronously.
            </summary>
        </member>
        <member name="M:webapi.Authority.IAuthenticator.VerifyToken(System.String,System.String)">
            <summary>
            Verify a JWT token and get claims.
            </summary>
        </member>
        <member name="M:webapi.Authority.IAuthenticator.ReadClaims(System.String)">
            <summary>
            Read claims from a JWT without validating.
            </summary>
        </member>
        <member name="T:webapi.Migrations.update2">
            <inheritdoc />
        </member>
        <member name="M:webapi.Migrations.update2.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.Migrations.update2.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:webapi.Migrations.update2.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:webapi.Models.AppCredential">
            <summary>
            Client credential request model.
            </summary>
        </member>
        <member name="P:webapi.Models.AppCredential.ClientId">
            <summary>
            Client identifier.
            </summary>
        </member>
        <member name="P:webapi.Models.AppCredential.Secret">
            <summary>
            Client secret.
            </summary>
        </member>
        <member name="T:webapi.Models.AuthResponse">
            <summary>
            Auth response model for refreshed tokens.
            </summary>
        </member>
        <member name="P:webapi.Models.AuthResponse.AccessToken">
            <summary>
            Access token string.
            </summary>
        </member>
        <member name="P:webapi.Models.AuthResponse.ExpiresAt">
            <summary>
            Access token expiration time (UTC).
            </summary>
        </member>
        <member name="P:webapi.Models.AuthResponse.RefreshToken">
            <summary>
            Refresh token string.
            </summary>
        </member>
        <member name="T:webapi.Models.TokenResponse">
            <summary>
            Token response model with access and refresh tokens.
            </summary>
        </member>
        <member name="P:webapi.Models.TokenResponse.AccessToken">
            <summary>
            Access token string.
            </summary>
        </member>
        <member name="P:webapi.Models.TokenResponse.ExpiresInSeconds">
            <summary>
            Access token expiration in seconds.
            </summary>
        </member>
        <member name="P:webapi.Models.TokenResponse.RefreshToken">
            <summary>
            Refresh token string.
            </summary>
        </member>
        <member name="P:webapi.Models.TokenResponse.RefreshTokenExpiresInSeconds">
            <summary>
            Refresh token expiration in seconds.
            </summary>
        </member>
        <member name="M:webapi.Security.SecretHasher.HashSecret(System.String)">
            <summary>
            Generates a salt and hashes the secret using PBKDF2.
            </summary>
        </member>
        <member name="M:webapi.Security.SecretHasher.VerifySecret(System.String,System.String,System.String)">
            <summary>
            Verifies the secret against the stored salt and hash.
            </summary>
        </member>
        <member name="M:webapi.Security.SecretHasher.HashWithPbkdf2(System.String,System.Byte[])">
            <summary>
            Hashes the secret using PBKDF2.
            </summary>
        </member>
        <member name="T:webapi.Token.RevokeTokenRequest">
            <summary>
            Revoke token request model.
            </summary>
        </member>
        <member name="P:webapi.Token.RevokeTokenRequest.RefreshToken">
            <summary>
            Refresh token string.
            </summary>
        </member>
        <member name="M:UserRepository.GetByEmailAsync(System.String)">
            <summary>
            Retrieves a user by their email.
            </summary>
        </member>
        <member name="M:UserRepository.AddAsync(webapi.Models.User)">
            <summary>
            Adds a new user to the database.
            </summary>
        </member>
        <member name="M:UserRepository.GetByUsernameAsync(System.String)">
            <summary>
            Retrieves a user by their username.
            </summary>
        </member>
        <member name="M:UserRepository.ExistsByUsernameAsync(System.String)">
            <summary>
            Checks if a username exists.
            </summary>
        </member>
        <member name="M:UserRepository.ExistsByEmailAsync(System.String)">
            <summary>
            Checks if an email exists.
            </summary>
        </member>
        <member name="M:RefreshTokenService.CreateRefreshTokenAsync(System.String,System.DateTime,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Creates a new refresh token for the specified client, stores its hashed value, and returns the plain token.
            </summary>
            <param name="clientId">The client identifier.</param>
            <param name="expiresAt">The expiration date/time of the token.</param>
            <param name="context">The current HTTP context, used to retrieve client IP and device info.</param>
            <returns>The plain refresh token string to be sent to the client.</returns>
        </member>
        <member name="M:RefreshTokenService.RevokeAsync(System.String,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Revokes the specified refresh token, marking it revoked and storing revocation audit info if available.
            </summary>
            <param name="rawToken">The plain refresh token to revoke.</param>
            <param name="context">Optional HTTP context to retrieve revocation IP address.</param>
            <returns>A task representing the asynchronous operation.</returns>
        </member>
        <member name="M:RefreshTokenService.GetClientIp(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Extracts the client IP address from the HTTP context, considering proxy headers.
            </summary>
            <param name="context">The HTTP context.</param>
            <returns>The client IP address as a string, or null if not found.</returns>
        </member>
        <member name="M:RefreshTokenService.GenerateSecureToken(System.Int32)">
            <summary>
            Generates a cryptographically secure, URL-safe random token string.
            </summary>
            <param name="size">The number of random bytes to generate (default is 64).</param>
            <returns>A URL-safe base64-encoded string.</returns>
        </member>
    </members>
</doc>
